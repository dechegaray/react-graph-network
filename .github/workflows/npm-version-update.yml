name: NPM Version Bump

on:
  pull_request:
    types:
      - closed
    branches:
      - 'master'

jobs:
  npm_version_bump:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR labels
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const isMerged = pr.merged === true;
            const hasLabels = pr.labels.length > 0;

            if (isMerged && hasLabels) {
              console.log('PR was merged and has labels');
              const supportedLabels = ['minor', 'patch', 'major']
              
              const labels = pr.labels.map((label) => label.name);
              const versionLabel = labels.find((label) => supportedLabels.includes(label));

              if (!!versionLabel) {
                console.log('PR has version label');

                const currentPackageJson = fs.readFileSync('package.json', 'utf8');
                const currentVersion = JSON.parse(currentPackageJson).version
                const [major, patch, minor] = JSON.parse({}).version.split('.')

                let newVersion = []
                switch (versionLabel) {
                  case 'minor':
                    newVersion = [major, patch, parseInt(minor) + 1];
                    break;
                  case 'patch':
                    newVersion = [major, parseInt(patch) + 1, minor];
                    break;
                  case 'major':
                    newVersion = [parseInt(major) + 1, patch, minor];
                    break;
                }

                console.log('New version:', version.join(','));
                
                const updatedPackageJson = currentPackageJson.replace(/"version": "[0-9]+\.[0-9]+\.[0-9]+"/, `"version": "${version.join(',')}"`);
                fs.writeFileSync('package.json', updatedPackageJson);

                console.log('Updated package.json with new version');
              } else {
                console.log('PR does not have version label. Skipping version update');
              }
            } else {
              console.log('PR was not merged or does not have labels. Skipping version update');
            }
